apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.name" . }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: 
         {{- include "app.selectorLabels" . | nindent 6}}
  template:
    metadata:
      labels:
        app: 
          {{- include "app.labels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      containers:
      - name: {{ template "app.name" . }}
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
          - name: SIGNER_SIGN_URL
            value: "{{ .Values.config.signUrl }}"
          - name: RESOLVER_URL
            value: "{{ .Values.config.resolverUrl }}"
          - name: PORT
            value: "{{ .Values.service.port }}"
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
        readinessProbe:
          httpGet:
            path: /isAlive
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 2
          failureThreshold: 2
          timeoutSeconds: 5
